buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

plugins { id "com.modrinth.minotaur" version "2.+" }
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven-publish'
if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.20_tech/gradletools.gradle'
}

group = "com.github.mcjty"
archivesBaseName = "mcjtylib"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

if (System.getenv('BUILD_NUMBER') != null) {
    version += ".${System.getenv('BUILD_NUMBER')}"
}

repos()
runs('mcjtylib')
jars('mcjtylib')

dependencies {
    mc()
    top()
    patchouli()
    jei()
}

task apiJar(type: Jar) {
    classifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/mcjtylib/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    publications.create('mavenJava', MavenPublication) {
        from components.java
        artifact apiJar

        artifactId = project.archivesBaseName
        pom {
            name = 'McJtyLib'
            description = 'Base mod for all McJty tech mods'
            scm {
                url = 'https://github.com/McJtyMods/McJtyLib'
                connection = 'scm:git:git@github.com:McJtyMods/McJtyLib.git'
                developerConnection = 'scm:git:git@github.com:McJtyMods/McJtyLib.git'
            }
            issueManagement {
                system = 'github'
                url = 'https://github.com/McJtyMods/McJtyLib/issues'
            }
            licenses {
                license {
                    name = 'MIT'
                    distribution = 'repo'
                }
            }
            developers {
                developer {
                    id = 'McJty'
                    name = 'McJty'
                    roles = ['developer']
                }
            }
        }
    }
    repositories {
        if (System.getenv('local_maven') != null) {
            maven {
                name = 'local'
                url = 'file://' + System.getenv('local_maven')
            }
        }
    }
}


cfdeps(['the-one-probe'], [], [])
modrinth(['the-one-probe'], [], [])
